module 'Line Follower' Input
author Ste7an
version 1 3 
choices commands val_raw val_cal val_dig get_min get_max get_avg calibrate print_cal version invert 
description 'I2C Line follower on ch32v203'
variables _buf _line_plot _line_buf a _inverted 

  spec ' ' 'init_line' 'init line _ plot _' 'num bool' 8 true
  spec 'r' 'read line' 'read line'
  spec 'r' 'bar_nr' 'bar_nr _' 'auto' '10'
  spec ' ' 'command' 'command _ : value _' 'str.commands auto' 'val_raw' true
  spec ' ' 'invert' 'invert _' 'bool' true

to bar_nr nr {
  return ('[data:join]' 'bar' nr)
}

to command cmd {
  local 'cmd_id' 0
  if (cmd == 'val_raw') {
    cmd_id = 0
  } (cmd == 'val_cal') {
    cmd_id = 1
  } (cmd == 'val_dig') {
    cmd_id = 2
  } (cmd == 'get_min') {
    cmd_id = 4
  } (cmd == 'get_max') {
    cmd_id = 5
  } (cmd == 'get_avg') {
    cmd_id = 6
  } (cmd == 'calibrate') {
    cmd_id = 3
  } (cmd == 'print_cal') {
    cmd_id = 8
  } (cmd == 'version') {
    cmd_id = 11
  } (cmd == 'invert') {
    cmd_id = 14
  }
  local 'buf' ('[data:makeList]' cmd_id)
  '[sensors:i2cWrite]' 51 buf
}

to init_line 'number of sensors' plot {
  _nr_sensors = (v 'number of sensors')
  _line_plot = plot
  _inverted = (booleanConstant false)
  if plot {
    'enable lvgl' true true
    for i _nr_sensors {
      '[tft:LVGLaddobj]' 'bar' (bar_nr i)
      '[tft:LVGLsetsize]' (bar_nr i) 15 100
      '[tft:LVGLsetpos]' (bar_nr i) (i * 20) 20
      '[tft:LVGLsetcolor]' (bar_nr i) (colorSwatch 190 29 9 255) (colorSwatch 255 0 10 255)
      '[tft:LVGLsetattribute]' 'range' (bar_nr i) 0 255
    }
  }
  _line_buf = (newList _nr_sensors)
}

to invert inverted {
  _inverted = inverted
}

to 'read line' {
  '[sensors:i2cRead]' 51 _line_buf
  if _line_plot {
    if _inverted {
      for i _nr_sensors {
        '[tft:LVGLsetval]' (bar_nr i) (255 - (at i _line_buf))
      }
    } else {
      for i _nr_sensors {
        '[tft:LVGLsetval]' (bar_nr i) (at i _line_buf)
      }
    }
  }
  return _line_buf
}

